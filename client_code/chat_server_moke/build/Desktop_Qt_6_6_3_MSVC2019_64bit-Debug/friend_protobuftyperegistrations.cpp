#include <QtProtobuf/qprotobufserializer.h>
#include "friend.qpb.h"

namespace my_chat_proto {
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarGetFriendListReq(qRegisterProtobufType<GetFriendListReq>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarGetFriendListRsp(qRegisterProtobufType<GetFriendListRsp>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarFriendDeleteReq(qRegisterProtobufType<FriendDeleteReq>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarFriendDeleteRsp(qRegisterProtobufType<FriendDeleteRsp>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarFriendAddReq(qRegisterProtobufType<FriendAddReq>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarFriendAddRsp(qRegisterProtobufType<FriendAddRsp>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarFriendAddProcessReq(qRegisterProtobufType<FriendAddProcessReq>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarFriendAddProcessRsp(qRegisterProtobufType<FriendAddProcessRsp>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarGetPendingFriendEventListReq(qRegisterProtobufType<GetPendingFriendEventListReq>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarFriendEvent(qRegisterProtobufType<FriendEvent>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarGetPendingFriendEventListRsp(qRegisterProtobufType<GetPendingFriendEventListRsp>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarUserSearchReq(qRegisterProtobufType<UserSearchReq>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarUserSearchRsp(qRegisterProtobufType<UserSearchRsp>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarGetChatSessionListReq(qRegisterProtobufType<GetChatSessionListReq>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarGetChatSessionListRsp(qRegisterProtobufType<GetChatSessionListRsp>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarChatSessionCreateReq(qRegisterProtobufType<ChatSessionCreateReq>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarChatSessionCreateRsp(qRegisterProtobufType<ChatSessionCreateRsp>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarGetChatSessionMemberReq(qRegisterProtobufType<GetChatSessionMemberReq>);
static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarGetChatSessionMemberRsp(qRegisterProtobufType<GetChatSessionMemberRsp>);
static bool RegisterFriendProtobufTypes = [](){ qRegisterProtobufTypes(); return true; }();
} // namespace my_chat_proto

