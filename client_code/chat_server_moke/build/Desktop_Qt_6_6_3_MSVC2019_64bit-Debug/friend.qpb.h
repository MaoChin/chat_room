/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#ifndef QPROTOBUF_FRIEND_H
#define QPROTOBUF_FRIEND_H

#include <QtProtobuf/qprotobufmessage.h>
#include <QtProtobuf/qprotobufobject.h>
#include <QtProtobuf/qprotobuflazymessagepointer.h>

#include <QtCore/qbytearray.h>
#include <QtCore/qstring.h>
#include <QtProtobuf/qprotobufoneof.h>
#include "base.qpb.h"

#include <QtCore/qmetatype.h>
#include <QtCore/qlist.h>
#include <QtCore/qshareddata.h>

#include <memory>


namespace my_chat_proto {
class GetFriendListReq;
using GetFriendListReqRepeated = QList<GetFriendListReq>;
class GetFriendListRsp;
using GetFriendListRspRepeated = QList<GetFriendListRsp>;
class FriendRemoveReq;
using FriendRemoveReqRepeated = QList<FriendRemoveReq>;
class FriendRemoveRsp;
using FriendRemoveRspRepeated = QList<FriendRemoveRsp>;
class FriendAddReq;
using FriendAddReqRepeated = QList<FriendAddReq>;
class FriendAddRsp;
using FriendAddRspRepeated = QList<FriendAddRsp>;
class FriendAddProcessReq;
using FriendAddProcessReqRepeated = QList<FriendAddProcessReq>;
class FriendAddProcessRsp;
using FriendAddProcessRspRepeated = QList<FriendAddProcessRsp>;
class GetPendingFriendEventListReq;
using GetPendingFriendEventListReqRepeated = QList<GetPendingFriendEventListReq>;
class FriendEvent;
using FriendEventRepeated = QList<FriendEvent>;
class GetPendingFriendEventListRsp;
using GetPendingFriendEventListRspRepeated = QList<GetPendingFriendEventListRsp>;
class FriendSearchReq;
using FriendSearchReqRepeated = QList<FriendSearchReq>;
class FriendSearchRsp;
using FriendSearchRspRepeated = QList<FriendSearchRsp>;
class GetChatSessionListReq;
using GetChatSessionListReqRepeated = QList<GetChatSessionListReq>;
class GetChatSessionListRsp;
using GetChatSessionListRspRepeated = QList<GetChatSessionListRsp>;
class ChatSessionCreateReq;
using ChatSessionCreateReqRepeated = QList<ChatSessionCreateReq>;
class ChatSessionCreateRsp;
using ChatSessionCreateRspRepeated = QList<ChatSessionCreateRsp>;
class GetChatSessionMemberReq;
using GetChatSessionMemberReqRepeated = QList<GetChatSessionMemberReq>;
class GetChatSessionMemberRsp;
using GetChatSessionMemberRspRepeated = QList<GetChatSessionMemberRsp>;

class GetFriendListReq_QtProtobufData;
class GetFriendListReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(GetFriendListReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        UserIdProtoFieldNumber = 2,
        SessionIdProtoFieldNumber = 3,
    };
    Q_ENUM(QtProtobufFieldEnum)

    GetFriendListReq();
    ~GetFriendListReq();
    GetFriendListReq(const GetFriendListReq &other);
    GetFriendListReq &operator =(const GetFriendListReq &other);
    GetFriendListReq(GetFriendListReq &&other) noexcept;
    GetFriendListReq &operator =(GetFriendListReq &&other) noexcept;
    bool operator ==(const GetFriendListReq &other) const;
    bool operator !=(const GetFriendListReq &other) const;

    QString requestId() const;

    QString userId() const;

    QString sessionId() const;
    void setRequestId(const QString &requestId);
    void setUserId(const QString &userId);
    void setSessionId(const QString &sessionId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<GetFriendListReq_QtProtobufData> dptr;
};

class GetFriendListRsp_QtProtobufData;
class GetFriendListRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(GetFriendListRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(my_chat_proto::UserInfoRepeated friendListData READ friendList WRITE setFriendList SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        FriendListProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    GetFriendListRsp();
    ~GetFriendListRsp();
    GetFriendListRsp(const GetFriendListRsp &other);
    GetFriendListRsp &operator =(const GetFriendListRsp &other);
    GetFriendListRsp(GetFriendListRsp &&other) noexcept;
    GetFriendListRsp &operator =(GetFriendListRsp &&other) noexcept;
    bool operator ==(const GetFriendListRsp &other) const;
    bool operator !=(const GetFriendListRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    UserInfoRepeated friendList() const;
    UserInfoRepeated &friendList();
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setFriendList(const UserInfoRepeated &friendList);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<GetFriendListRsp_QtProtobufData> dptr;
};

class FriendRemoveReq_QtProtobufData;
class FriendRemoveReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FriendRemoveReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)
    Q_PROPERTY(QString peerId READ peerId WRITE setPeerId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        UserIdProtoFieldNumber = 2,
        SessionIdProtoFieldNumber = 3,
        PeerIdProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    FriendRemoveReq();
    ~FriendRemoveReq();
    FriendRemoveReq(const FriendRemoveReq &other);
    FriendRemoveReq &operator =(const FriendRemoveReq &other);
    FriendRemoveReq(FriendRemoveReq &&other) noexcept;
    FriendRemoveReq &operator =(FriendRemoveReq &&other) noexcept;
    bool operator ==(const FriendRemoveReq &other) const;
    bool operator !=(const FriendRemoveReq &other) const;

    QString requestId() const;

    QString userId() const;

    QString sessionId() const;

    QString peerId() const;
    void setRequestId(const QString &requestId);
    void setUserId(const QString &userId);
    void setSessionId(const QString &sessionId);
    void setPeerId(const QString &peerId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<FriendRemoveReq_QtProtobufData> dptr;
};

class FriendRemoveRsp_QtProtobufData;
class FriendRemoveRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FriendRemoveRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
    };
    Q_ENUM(QtProtobufFieldEnum)

    FriendRemoveRsp();
    ~FriendRemoveRsp();
    FriendRemoveRsp(const FriendRemoveRsp &other);
    FriendRemoveRsp &operator =(const FriendRemoveRsp &other);
    FriendRemoveRsp(FriendRemoveRsp &&other) noexcept;
    FriendRemoveRsp &operator =(FriendRemoveRsp &&other) noexcept;
    bool operator ==(const FriendRemoveRsp &other) const;
    bool operator !=(const FriendRemoveRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<FriendRemoveRsp_QtProtobufData> dptr;
};

class FriendAddReq_QtProtobufData;
class FriendAddReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FriendAddReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)
    Q_PROPERTY(QString respondentId READ respondentId WRITE setRespondentId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SessionIdProtoFieldNumber = 2,
        UserIdProtoFieldNumber = 3,
        RespondentIdProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    FriendAddReq();
    ~FriendAddReq();
    FriendAddReq(const FriendAddReq &other);
    FriendAddReq &operator =(const FriendAddReq &other);
    FriendAddReq(FriendAddReq &&other) noexcept;
    FriendAddReq &operator =(FriendAddReq &&other) noexcept;
    bool operator ==(const FriendAddReq &other) const;
    bool operator !=(const FriendAddReq &other) const;

    QString requestId() const;

    QString sessionId() const;

    QString userId() const;

    QString respondentId() const;
    void setRequestId(const QString &requestId);
    void setSessionId(const QString &sessionId);
    void setUserId(const QString &userId);
    void setRespondentId(const QString &respondentId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<FriendAddReq_QtProtobufData> dptr;
};

class FriendAddRsp_QtProtobufData;
class FriendAddRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FriendAddRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(QString notifyEventId READ notifyEventId WRITE setNotifyEventId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        NotifyEventIdProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    FriendAddRsp();
    ~FriendAddRsp();
    FriendAddRsp(const FriendAddRsp &other);
    FriendAddRsp &operator =(const FriendAddRsp &other);
    FriendAddRsp(FriendAddRsp &&other) noexcept;
    FriendAddRsp &operator =(FriendAddRsp &&other) noexcept;
    bool operator ==(const FriendAddRsp &other) const;
    bool operator !=(const FriendAddRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    QString notifyEventId() const;
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setNotifyEventId(const QString &notifyEventId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<FriendAddRsp_QtProtobufData> dptr;
};

class FriendAddProcessReq_QtProtobufData;
class FriendAddProcessReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FriendAddProcessReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString notifyEventId READ notifyEventId WRITE setNotifyEventId SCRIPTABLE true)
    Q_PROPERTY(bool agree READ agree WRITE setAgree SCRIPTABLE true)
    Q_PROPERTY(QString applyUserId READ applyUserId WRITE setApplyUserId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        NotifyEventIdProtoFieldNumber = 2,
        AgreeProtoFieldNumber = 3,
        ApplyUserIdProtoFieldNumber = 4,
        SessionIdProtoFieldNumber = 5,
        UserIdProtoFieldNumber = 6,
    };
    Q_ENUM(QtProtobufFieldEnum)

    FriendAddProcessReq();
    ~FriendAddProcessReq();
    FriendAddProcessReq(const FriendAddProcessReq &other);
    FriendAddProcessReq &operator =(const FriendAddProcessReq &other);
    FriendAddProcessReq(FriendAddProcessReq &&other) noexcept;
    FriendAddProcessReq &operator =(FriendAddProcessReq &&other) noexcept;
    bool operator ==(const FriendAddProcessReq &other) const;
    bool operator !=(const FriendAddProcessReq &other) const;

    QString requestId() const;

    QString notifyEventId() const;

    bool agree() const;

    QString applyUserId() const;

    QString sessionId() const;

    QString userId() const;
    void setRequestId(const QString &requestId);
    void setNotifyEventId(const QString &notifyEventId);
    void setAgree(const bool &agree);
    void setApplyUserId(const QString &applyUserId);
    void setSessionId(const QString &sessionId);
    void setUserId(const QString &userId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<FriendAddProcessReq_QtProtobufData> dptr;
};

class FriendAddProcessRsp_QtProtobufData;
class FriendAddProcessRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FriendAddProcessRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(QString newSessionId READ newSessionId WRITE setNewSessionId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        NewSessionIdProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    FriendAddProcessRsp();
    ~FriendAddProcessRsp();
    FriendAddProcessRsp(const FriendAddProcessRsp &other);
    FriendAddProcessRsp &operator =(const FriendAddProcessRsp &other);
    FriendAddProcessRsp(FriendAddProcessRsp &&other) noexcept;
    FriendAddProcessRsp &operator =(FriendAddProcessRsp &&other) noexcept;
    bool operator ==(const FriendAddProcessRsp &other) const;
    bool operator !=(const FriendAddProcessRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    QString newSessionId() const;
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setNewSessionId(const QString &newSessionId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<FriendAddProcessRsp_QtProtobufData> dptr;
};

class GetPendingFriendEventListReq_QtProtobufData;
class GetPendingFriendEventListReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(GetPendingFriendEventListReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SessionIdProtoFieldNumber = 2,
        UserIdProtoFieldNumber = 3,
    };
    Q_ENUM(QtProtobufFieldEnum)

    GetPendingFriendEventListReq();
    ~GetPendingFriendEventListReq();
    GetPendingFriendEventListReq(const GetPendingFriendEventListReq &other);
    GetPendingFriendEventListReq &operator =(const GetPendingFriendEventListReq &other);
    GetPendingFriendEventListReq(GetPendingFriendEventListReq &&other) noexcept;
    GetPendingFriendEventListReq &operator =(GetPendingFriendEventListReq &&other) noexcept;
    bool operator ==(const GetPendingFriendEventListReq &other) const;
    bool operator !=(const GetPendingFriendEventListReq &other) const;

    QString requestId() const;

    QString sessionId() const;

    QString userId() const;
    void setRequestId(const QString &requestId);
    void setSessionId(const QString &sessionId);
    void setUserId(const QString &userId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<GetPendingFriendEventListReq_QtProtobufData> dptr;
};

class FriendEvent_QtProtobufData;
class FriendEvent : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FriendEvent)
    Q_PROPERTY(QString eventId READ eventId WRITE setEventId SCRIPTABLE true)
    Q_PROPERTY(my_chat_proto::UserInfo *sender_p READ sender_p WRITE setSender_p SCRIPTABLE false)

public:
    enum QtProtobufFieldEnum {
        EventIdProtoFieldNumber = 1,
        SenderProtoFieldNumber = 3,
    };
    Q_ENUM(QtProtobufFieldEnum)

    FriendEvent();
    ~FriendEvent();
    FriendEvent(const FriendEvent &other);
    FriendEvent &operator =(const FriendEvent &other);
    FriendEvent(FriendEvent &&other) noexcept;
    FriendEvent &operator =(FriendEvent &&other) noexcept;
    bool operator ==(const FriendEvent &other) const;
    bool operator !=(const FriendEvent &other) const;

    QString eventId() const;

    UserInfo &sender() const;
    void setEventId(const QString &eventId);
    void setSender(const UserInfo &sender);
    static void registerTypes();

private:
    UserInfo *sender_p() const;
    void setSender_p(UserInfo *sender);
    QExplicitlySharedDataPointer<FriendEvent_QtProtobufData> dptr;
};

class GetPendingFriendEventListRsp_QtProtobufData;
class GetPendingFriendEventListRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(GetPendingFriendEventListRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(my_chat_proto::FriendEventRepeated eventData READ event WRITE setEvent SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        EventProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    GetPendingFriendEventListRsp();
    ~GetPendingFriendEventListRsp();
    GetPendingFriendEventListRsp(const GetPendingFriendEventListRsp &other);
    GetPendingFriendEventListRsp &operator =(const GetPendingFriendEventListRsp &other);
    GetPendingFriendEventListRsp(GetPendingFriendEventListRsp &&other) noexcept;
    GetPendingFriendEventListRsp &operator =(GetPendingFriendEventListRsp &&other) noexcept;
    bool operator ==(const GetPendingFriendEventListRsp &other) const;
    bool operator !=(const GetPendingFriendEventListRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    FriendEventRepeated event() const;
    FriendEventRepeated &event();
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setEvent(const FriendEventRepeated &event);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<GetPendingFriendEventListRsp_QtProtobufData> dptr;
};

class FriendSearchReq_QtProtobufData;
class FriendSearchReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FriendSearchReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString searchKey READ searchKey WRITE setSearchKey SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SearchKeyProtoFieldNumber = 2,
        SessionIdProtoFieldNumber = 3,
        UserIdProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    FriendSearchReq();
    ~FriendSearchReq();
    FriendSearchReq(const FriendSearchReq &other);
    FriendSearchReq &operator =(const FriendSearchReq &other);
    FriendSearchReq(FriendSearchReq &&other) noexcept;
    FriendSearchReq &operator =(FriendSearchReq &&other) noexcept;
    bool operator ==(const FriendSearchReq &other) const;
    bool operator !=(const FriendSearchReq &other) const;

    QString requestId() const;

    QString searchKey() const;

    QString sessionId() const;

    QString userId() const;
    void setRequestId(const QString &requestId);
    void setSearchKey(const QString &searchKey);
    void setSessionId(const QString &sessionId);
    void setUserId(const QString &userId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<FriendSearchReq_QtProtobufData> dptr;
};

class FriendSearchRsp_QtProtobufData;
class FriendSearchRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FriendSearchRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(my_chat_proto::UserInfoRepeated userInfoData READ userInfo WRITE setUserInfo SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        UserInfoProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    FriendSearchRsp();
    ~FriendSearchRsp();
    FriendSearchRsp(const FriendSearchRsp &other);
    FriendSearchRsp &operator =(const FriendSearchRsp &other);
    FriendSearchRsp(FriendSearchRsp &&other) noexcept;
    FriendSearchRsp &operator =(FriendSearchRsp &&other) noexcept;
    bool operator ==(const FriendSearchRsp &other) const;
    bool operator !=(const FriendSearchRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    UserInfoRepeated userInfo() const;
    UserInfoRepeated &userInfo();
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setUserInfo(const UserInfoRepeated &userInfo);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<FriendSearchRsp_QtProtobufData> dptr;
};

class GetChatSessionListReq_QtProtobufData;
class GetChatSessionListReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(GetChatSessionListReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SessionIdProtoFieldNumber = 2,
        UserIdProtoFieldNumber = 3,
    };
    Q_ENUM(QtProtobufFieldEnum)

    GetChatSessionListReq();
    ~GetChatSessionListReq();
    GetChatSessionListReq(const GetChatSessionListReq &other);
    GetChatSessionListReq &operator =(const GetChatSessionListReq &other);
    GetChatSessionListReq(GetChatSessionListReq &&other) noexcept;
    GetChatSessionListReq &operator =(GetChatSessionListReq &&other) noexcept;
    bool operator ==(const GetChatSessionListReq &other) const;
    bool operator !=(const GetChatSessionListReq &other) const;

    QString requestId() const;

    QString sessionId() const;

    QString userId() const;
    void setRequestId(const QString &requestId);
    void setSessionId(const QString &sessionId);
    void setUserId(const QString &userId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<GetChatSessionListReq_QtProtobufData> dptr;
};

class GetChatSessionListRsp_QtProtobufData;
class GetChatSessionListRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(GetChatSessionListRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(my_chat_proto::ChatSessionInfoRepeated chatSessionInfoListData READ chatSessionInfoList WRITE setChatSessionInfoList SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        ChatSessionInfoListProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    GetChatSessionListRsp();
    ~GetChatSessionListRsp();
    GetChatSessionListRsp(const GetChatSessionListRsp &other);
    GetChatSessionListRsp &operator =(const GetChatSessionListRsp &other);
    GetChatSessionListRsp(GetChatSessionListRsp &&other) noexcept;
    GetChatSessionListRsp &operator =(GetChatSessionListRsp &&other) noexcept;
    bool operator ==(const GetChatSessionListRsp &other) const;
    bool operator !=(const GetChatSessionListRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    ChatSessionInfoRepeated chatSessionInfoList() const;
    ChatSessionInfoRepeated &chatSessionInfoList();
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setChatSessionInfoList(const ChatSessionInfoRepeated &chatSessionInfoList);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<GetChatSessionListRsp_QtProtobufData> dptr;
};

class ChatSessionCreateReq_QtProtobufData;
class ChatSessionCreateReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(ChatSessionCreateReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)
    Q_PROPERTY(QString chatSessionName READ chatSessionName WRITE setChatSessionName SCRIPTABLE true)
    Q_PROPERTY(QStringList memberIdList READ memberIdList WRITE setMemberIdList SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SessionIdProtoFieldNumber = 2,
        UserIdProtoFieldNumber = 3,
        ChatSessionNameProtoFieldNumber = 4,
        MemberIdListProtoFieldNumber = 5,
    };
    Q_ENUM(QtProtobufFieldEnum)

    ChatSessionCreateReq();
    ~ChatSessionCreateReq();
    ChatSessionCreateReq(const ChatSessionCreateReq &other);
    ChatSessionCreateReq &operator =(const ChatSessionCreateReq &other);
    ChatSessionCreateReq(ChatSessionCreateReq &&other) noexcept;
    ChatSessionCreateReq &operator =(ChatSessionCreateReq &&other) noexcept;
    bool operator ==(const ChatSessionCreateReq &other) const;
    bool operator !=(const ChatSessionCreateReq &other) const;

    QString requestId() const;

    QString sessionId() const;

    QString userId() const;

    QString chatSessionName() const;

    QStringList memberIdList() const;
    QStringList &memberIdList();
    void setRequestId(const QString &requestId);
    void setSessionId(const QString &sessionId);
    void setUserId(const QString &userId);
    void setChatSessionName(const QString &chatSessionName);
    void setMemberIdList(const QStringList &memberIdList);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<ChatSessionCreateReq_QtProtobufData> dptr;
};

class ChatSessionCreateRsp_QtProtobufData;
class ChatSessionCreateRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(ChatSessionCreateRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(my_chat_proto::ChatSessionInfo *chatSessionInfo_p READ chatSessionInfo_p WRITE setChatSessionInfo_p SCRIPTABLE false)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        ChatSessionInfoProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    ChatSessionCreateRsp();
    ~ChatSessionCreateRsp();
    ChatSessionCreateRsp(const ChatSessionCreateRsp &other);
    ChatSessionCreateRsp &operator =(const ChatSessionCreateRsp &other);
    ChatSessionCreateRsp(ChatSessionCreateRsp &&other) noexcept;
    ChatSessionCreateRsp &operator =(ChatSessionCreateRsp &&other) noexcept;
    bool operator ==(const ChatSessionCreateRsp &other) const;
    bool operator !=(const ChatSessionCreateRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    ChatSessionInfo &chatSessionInfo() const;
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setChatSessionInfo(const ChatSessionInfo &chatSessionInfo);
    static void registerTypes();

private:
    ChatSessionInfo *chatSessionInfo_p() const;
    void setChatSessionInfo_p(ChatSessionInfo *chatSessionInfo);
    QExplicitlySharedDataPointer<ChatSessionCreateRsp_QtProtobufData> dptr;
};

class GetChatSessionMemberReq_QtProtobufData;
class GetChatSessionMemberReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(GetChatSessionMemberReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)
    Q_PROPERTY(QString chatSessionId READ chatSessionId WRITE setChatSessionId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SessionIdProtoFieldNumber = 2,
        UserIdProtoFieldNumber = 3,
        ChatSessionIdProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    GetChatSessionMemberReq();
    ~GetChatSessionMemberReq();
    GetChatSessionMemberReq(const GetChatSessionMemberReq &other);
    GetChatSessionMemberReq &operator =(const GetChatSessionMemberReq &other);
    GetChatSessionMemberReq(GetChatSessionMemberReq &&other) noexcept;
    GetChatSessionMemberReq &operator =(GetChatSessionMemberReq &&other) noexcept;
    bool operator ==(const GetChatSessionMemberReq &other) const;
    bool operator !=(const GetChatSessionMemberReq &other) const;

    QString requestId() const;

    QString sessionId() const;

    QString userId() const;

    QString chatSessionId() const;
    void setRequestId(const QString &requestId);
    void setSessionId(const QString &sessionId);
    void setUserId(const QString &userId);
    void setChatSessionId(const QString &chatSessionId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<GetChatSessionMemberReq_QtProtobufData> dptr;
};

class GetChatSessionMemberRsp_QtProtobufData;
class GetChatSessionMemberRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(GetChatSessionMemberRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(my_chat_proto::UserInfoRepeated memberInfoListData READ memberInfoList WRITE setMemberInfoList SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        MemberInfoListProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    GetChatSessionMemberRsp();
    ~GetChatSessionMemberRsp();
    GetChatSessionMemberRsp(const GetChatSessionMemberRsp &other);
    GetChatSessionMemberRsp &operator =(const GetChatSessionMemberRsp &other);
    GetChatSessionMemberRsp(GetChatSessionMemberRsp &&other) noexcept;
    GetChatSessionMemberRsp &operator =(GetChatSessionMemberRsp &&other) noexcept;
    bool operator ==(const GetChatSessionMemberRsp &other) const;
    bool operator !=(const GetChatSessionMemberRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    UserInfoRepeated memberInfoList() const;
    UserInfoRepeated &memberInfoList();
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setMemberInfoList(const UserInfoRepeated &memberInfoList);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<GetChatSessionMemberRsp_QtProtobufData> dptr;
};
} // namespace my_chat_proto

Q_DECLARE_METATYPE(my_chat_proto::GetFriendListReq)
Q_DECLARE_METATYPE(my_chat_proto::GetFriendListRsp)
Q_DECLARE_METATYPE(my_chat_proto::FriendRemoveReq)
Q_DECLARE_METATYPE(my_chat_proto::FriendRemoveRsp)
Q_DECLARE_METATYPE(my_chat_proto::FriendAddReq)
Q_DECLARE_METATYPE(my_chat_proto::FriendAddRsp)
Q_DECLARE_METATYPE(my_chat_proto::FriendAddProcessReq)
Q_DECLARE_METATYPE(my_chat_proto::FriendAddProcessRsp)
Q_DECLARE_METATYPE(my_chat_proto::GetPendingFriendEventListReq)
Q_DECLARE_METATYPE(my_chat_proto::FriendEvent)
Q_DECLARE_METATYPE(my_chat_proto::GetPendingFriendEventListRsp)
Q_DECLARE_METATYPE(my_chat_proto::FriendSearchReq)
Q_DECLARE_METATYPE(my_chat_proto::FriendSearchRsp)
Q_DECLARE_METATYPE(my_chat_proto::GetChatSessionListReq)
Q_DECLARE_METATYPE(my_chat_proto::GetChatSessionListRsp)
Q_DECLARE_METATYPE(my_chat_proto::ChatSessionCreateReq)
Q_DECLARE_METATYPE(my_chat_proto::ChatSessionCreateRsp)
Q_DECLARE_METATYPE(my_chat_proto::GetChatSessionMemberReq)
Q_DECLARE_METATYPE(my_chat_proto::GetChatSessionMemberRsp)
#endif // QPROTOBUF_FRIEND_H
