/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#ifndef QPROTOBUF_VOICE_RECOGNITION_H
#define QPROTOBUF_VOICE_RECOGNITION_H

#include <QtProtobuf/qprotobufmessage.h>
#include <QtProtobuf/qprotobufobject.h>
#include <QtProtobuf/qprotobuflazymessagepointer.h>

#include <QtCore/qbytearray.h>
#include <QtCore/qstring.h>
#include <QtProtobuf/qprotobufoneof.h>

#include <QtCore/qmetatype.h>
#include <QtCore/qlist.h>
#include <QtCore/qshareddata.h>

#include <memory>


namespace my_chat_proto {
class VoiceRecognitionReq;
using VoiceRecognitionReqRepeated = QList<VoiceRecognitionReq>;
class VoiceRecognitionRsp;
using VoiceRecognitionRspRepeated = QList<VoiceRecognitionRsp>;

class VoiceRecognitionReq_QtProtobufData;
class VoiceRecognitionReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(VoiceRecognitionReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QByteArray voiceContent READ voiceContent WRITE setVoiceContent SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        VoiceContentProtoFieldNumber = 2,
        UserIdProtoFieldNumber = 3,
        SessionIdProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    VoiceRecognitionReq();
    ~VoiceRecognitionReq();
    VoiceRecognitionReq(const VoiceRecognitionReq &other);
    VoiceRecognitionReq &operator =(const VoiceRecognitionReq &other);
    VoiceRecognitionReq(VoiceRecognitionReq &&other) noexcept;
    VoiceRecognitionReq &operator =(VoiceRecognitionReq &&other) noexcept;
    bool operator ==(const VoiceRecognitionReq &other) const;
    bool operator !=(const VoiceRecognitionReq &other) const;

    QString requestId() const;

    QByteArray voiceContent() const;

    QString userId() const;

    QString sessionId() const;
    void setRequestId(const QString &requestId);
    void setVoiceContent(const QByteArray &voiceContent);
    void setUserId(const QString &userId);
    void setSessionId(const QString &sessionId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<VoiceRecognitionReq_QtProtobufData> dptr;
};

class VoiceRecognitionRsp_QtProtobufData;
class VoiceRecognitionRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(VoiceRecognitionRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(QString recognitionResult READ recognitionResult WRITE setRecognitionResult SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        RecognitionResultProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    VoiceRecognitionRsp();
    ~VoiceRecognitionRsp();
    VoiceRecognitionRsp(const VoiceRecognitionRsp &other);
    VoiceRecognitionRsp &operator =(const VoiceRecognitionRsp &other);
    VoiceRecognitionRsp(VoiceRecognitionRsp &&other) noexcept;
    VoiceRecognitionRsp &operator =(VoiceRecognitionRsp &&other) noexcept;
    bool operator ==(const VoiceRecognitionRsp &other) const;
    bool operator !=(const VoiceRecognitionRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    QString recognitionResult() const;
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setRecognitionResult(const QString &recognitionResult);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<VoiceRecognitionRsp_QtProtobufData> dptr;
};
} // namespace my_chat_proto

Q_DECLARE_METATYPE(my_chat_proto::VoiceRecognitionReq)
Q_DECLARE_METATYPE(my_chat_proto::VoiceRecognitionRsp)
#endif // QPROTOBUF_VOICE_RECOGNITION_H
