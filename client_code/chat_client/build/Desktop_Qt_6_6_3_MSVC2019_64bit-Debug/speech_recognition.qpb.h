/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#ifndef QPROTOBUF_SPEECH_RECOGNITION_H
#define QPROTOBUF_SPEECH_RECOGNITION_H

#include <QtProtobuf/qprotobufmessage.h>
#include <QtProtobuf/qprotobufobject.h>
#include <QtProtobuf/qprotobuflazymessagepointer.h>

#include <QtCore/qbytearray.h>
#include <QtCore/qstring.h>
#include <QtProtobuf/qprotobufoneof.h>

#include <QtCore/qmetatype.h>
#include <QtCore/qlist.h>
#include <QtCore/qshareddata.h>

#include <memory>


namespace bite_im {
class SpeechRecognitionReq;
using SpeechRecognitionReqRepeated = QList<SpeechRecognitionReq>;
class SpeechRecognitionRsp;
using SpeechRecognitionRspRepeated = QList<SpeechRecognitionRsp>;

class SpeechRecognitionReq_QtProtobufData;
class SpeechRecognitionReq : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(SpeechRecognitionReq)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QByteArray speechContent READ speechContent WRITE setSpeechContent SCRIPTABLE true)
    Q_PROPERTY(QString userId READ userId WRITE setUserId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SpeechContentProtoFieldNumber = 2,
        UserIdProtoFieldNumber = 3,
        SessionIdProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    SpeechRecognitionReq();
    ~SpeechRecognitionReq();
    SpeechRecognitionReq(const SpeechRecognitionReq &other);
    SpeechRecognitionReq &operator =(const SpeechRecognitionReq &other);
    SpeechRecognitionReq(SpeechRecognitionReq &&other) noexcept;
    SpeechRecognitionReq &operator =(SpeechRecognitionReq &&other) noexcept;
    bool operator ==(const SpeechRecognitionReq &other) const;
    bool operator !=(const SpeechRecognitionReq &other) const;

    QString requestId() const;

    QByteArray speechContent() const;

    QString userId() const;

    QString sessionId() const;
    void setRequestId(const QString &requestId);
    void setSpeechContent(const QByteArray &speechContent);
    void setUserId(const QString &userId);
    void setSessionId(const QString &sessionId);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<SpeechRecognitionReq_QtProtobufData> dptr;
};

class SpeechRecognitionRsp_QtProtobufData;
class SpeechRecognitionRsp : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(SpeechRecognitionRsp)
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(bool success READ success WRITE setSuccess SCRIPTABLE true)
    Q_PROPERTY(QString errmsg READ errmsg WRITE setErrmsg SCRIPTABLE true)
    Q_PROPERTY(QString recognitionResult READ recognitionResult WRITE setRecognitionResult SCRIPTABLE true)

public:
    enum QtProtobufFieldEnum {
        RequestIdProtoFieldNumber = 1,
        SuccessProtoFieldNumber = 2,
        ErrmsgProtoFieldNumber = 3,
        RecognitionResultProtoFieldNumber = 4,
    };
    Q_ENUM(QtProtobufFieldEnum)

    SpeechRecognitionRsp();
    ~SpeechRecognitionRsp();
    SpeechRecognitionRsp(const SpeechRecognitionRsp &other);
    SpeechRecognitionRsp &operator =(const SpeechRecognitionRsp &other);
    SpeechRecognitionRsp(SpeechRecognitionRsp &&other) noexcept;
    SpeechRecognitionRsp &operator =(SpeechRecognitionRsp &&other) noexcept;
    bool operator ==(const SpeechRecognitionRsp &other) const;
    bool operator !=(const SpeechRecognitionRsp &other) const;

    QString requestId() const;

    bool success() const;

    QString errmsg() const;

    QString recognitionResult() const;
    void setRequestId(const QString &requestId);
    void setSuccess(const bool &success);
    void setErrmsg(const QString &errmsg);
    void setRecognitionResult(const QString &recognitionResult);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<SpeechRecognitionRsp_QtProtobufData> dptr;
};
} // namespace bite_im

Q_DECLARE_METATYPE(bite_im::SpeechRecognitionReq)
Q_DECLARE_METATYPE(bite_im::SpeechRecognitionRsp)
#endif // QPROTOBUF_SPEECH_RECOGNITION_H
